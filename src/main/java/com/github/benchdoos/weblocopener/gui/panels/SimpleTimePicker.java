/*
 * (C) Copyright 2019.  Eugene Zrazhevsky and others.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *     http://www.apache.org/licenses/LICENSE-2.0
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * Contributors:
 * Eugene Zrazhevsky <eugene.zrazhevsky@gmail.com>
 */

package com.github.benchdoos.weblocopener.gui.panels;

import com.github.benchdoos.weblocopener.gui.panels.simpleTimePickerListeners.ValueChangeListener;
import com.intellij.uiDesigner.core.GridConstraints;
import com.intellij.uiDesigner.core.GridLayoutManager;

import javax.swing.*;
import java.awt.*;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.Date;

public class SimpleTimePicker extends JPanel {
    private ArrayList<ValueChangeListener> listeners = new ArrayList<>();

    private JPanel contentPane;
    private JComboBox<String> hourComboBox;
    private JComboBox<String> minuteComboBox;

    {
// GUI initializer generated by IntelliJ IDEA GUI Designer
// >>> IMPORTANT!! <<<
// DO NOT EDIT OR ADD ANY CODE HERE!
        $$$setupUI$$$();
    }

    public SimpleTimePicker() {
        initGui();
        initComboBoxes();
    }

    /**
     * @noinspection ALL
     */
    public JComponent $$$getRootComponent$$$() {
        return contentPane;
    }

    /**
     * Method generated by IntelliJ IDEA GUI Designer
     * >>> IMPORTANT!! <<<
     * DO NOT edit this method OR call it in your code!
     *
     * @noinspection ALL
     */
    private void $$$setupUI$$$() {
        contentPane = new JPanel();
        contentPane.setLayout(new GridLayoutManager(1, 2, new Insets(0, 0, 0, 0), -1, -1));
        hourComboBox = new JComboBox();
        contentPane.add(hourComboBox, new GridConstraints(0, 0, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, new Dimension(50, -1), new Dimension(50, -1), new Dimension(50, -1), 0, false));
        minuteComboBox = new JComboBox();
        contentPane.add(minuteComboBox, new GridConstraints(0, 1, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, new Dimension(50, -1), new Dimension(50, -1), new Dimension(50, -1), 0, false));
    }

    public void addValueChangeListener(ValueChangeListener listener) {
        listeners.add(listener);
    }

    public void removeValueChangeListener(ValueChangeListener listener) {
        for (ValueChangeListener l : listeners) {
            if (l == listener) {
                listeners.remove(l);
            }
        }
    }

    private DefaultComboBoxModel<String> getComboBoxModel(int edge) {
        ArrayList<String> hours = new ArrayList<>();
        for (int i = 0; i < edge; i++) {
            if (i < 10) {
                hours.add("0" + i);
            } else {
                hours.add(i + "");
            }
        }
        final String[] strings = hours.toArray(new String[0]);
        return new DefaultComboBoxModel<>(strings);
    }

    public Date getSelectedTime() {
        final Calendar instance = Calendar.getInstance();
        final String selectedHour = (String) hourComboBox.getSelectedItem();
        final String selectedMinute = (String) minuteComboBox.getSelectedItem();
        if (selectedHour != null && selectedMinute != null) {
            instance.set(Calendar.HOUR, Integer.parseInt(selectedHour));
            instance.set(Calendar.MINUTE, Integer.parseInt(selectedMinute));
            instance.set(Calendar.SECOND, 0);
            instance.set(Calendar.MILLISECOND, 0);
        }
        return instance.getTime();
    }

    private void initComboBoxes() {
        DefaultComboBoxModel<String> hoursModel = getComboBoxModel(24);
        DefaultComboBoxModel<String> minutesModel = getComboBoxModel(60);

        hourComboBox.setModel(hoursModel);
        minuteComboBox.setModel(minutesModel);
    }

    public void initGui() {
        setLayout(new GridLayout());
        add(contentPane);
    }
}
