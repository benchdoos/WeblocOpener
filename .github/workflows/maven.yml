# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: WeblocOpener release build

on:
  push:
    branches: [ "master", "rc/*"]
#  Disabled: pull requests branches differ with WeblocOpenerCore
#  pull_request:
#    branches: [ "master", "rc/*"]

jobs:
  build:
    runs-on: ubuntu-latest
    outputs:
      WEBLOCOPENERCORE_HASH: ${{ steps.weblocopenercore_hash.outputs.WEBLOCOPENERCORE_HASH }}
      WEBLOCOPENER_HASH: ${{ steps.weblocopener_hash.outputs.WEBLOCOPENER_HASH }}
    steps:
    - uses: actions/checkout@v3
    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: maven

    - name: Set Unique Build ID
      id: unique_id
      run: echo "BUILD_ID=$GITHUB_RUN_ID" >> $GITHUB_ENV

    - name: Branch name
      run: |
        echo running on branch ${GITHUB_REF##*/}
        echo running on branch: ${GITHUB_REF#refs/heads/}
      working-directory: ${{ github.workspace }}

    - name: Clone core
      uses: GuillaumeFalourd/clone-github-repo-action@v2.2
      with:
        owner: 'benchdoos'
        repository: 'weblocopenercore'
        access-token: ${{ secrets.WEBLOCOPENERCORE }}
        branch: ${GITHUB_REF#refs/heads/}

    - name: Build WeblocOpener core
      run: |
        cd weblocopenercore 
        ls -a
        mvn -B clean install -P hide-ultimate-mode

    - name: Get commit hash for WeblocOpenerCore
      id: weblocopenercore_hash
      run: echo "WEBLOCOPENERCORE_HASH=$(git rev-parse HEAD)" >> $GITHUB_OUTPUT

    - name: Build WeblocOpener
      run: mvn -B clean package -P build-setup,build-deb,build-exe --file pom.xml

    - name: Get commit hash for WeblocOpener
      id: weblocopener_hash
      run: echo "WEBLOCOPENER_HASH=$(git rev-parse HEAD)" >> $GITHUB_OUTPUT

    - name: Upload WeblocOpener.deb
      uses: actions/upload-artifact@v2
      with:
        name: WeblocOpener.deb
        path: ${{ github.workspace }}/target/WeblocOpener.deb

    - name: Upload WeblocOpenerSetup.exe
      uses: actions/upload-artifact@v2
      with:
        name: WeblocOpenerSetup.exe
        path: ${{ github.workspace }}/target/WeblocOpenerSetup.exe


  create-release:
    runs-on: ubuntu-latest
    needs:
      - build
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set Unique Build ID
        id: unique_id
        run: echo "BUILD_ID=$GITHUB_RUN_ID" >> $GITHUB_ENV

      - name: Download WeblocOpener.deb
        uses: actions/download-artifact@v2
        with:
          name: WeblocOpener.deb
          path: ${{ github.workspace }}

      - name: Download WeblocOpenerSetup.exe
        uses: actions/download-artifact@v2
        with:
          name: WeblocOpenerSetup.exe
          path: ${{ github.workspace }}

#      - name: Watching
#        run: |
#          echo directories:
#          find . -type d -print
#          echo files:
#          find . -type f -print

      - name: Echo files
        run: |
          echo current location: $PWD
          ls -a
      - name: Echo variables
        run: |
          RELEASE_NAME=rc-${GITHUB_REF#refs/heads/}-build.$BUILD_ID
          RELEASE_TAG=${GITHUB_REF#refs/heads/}-build.$BUILD_ID
          echo Release name: $RELEASE_NAME
          echo Just from outputs: "${{ needs.build.outputs.WEBLOCOPENERCORE_HASH }} | ${{ needs.build.outputs.WEBLOCOPENER_HASH }}"

      - name: Create Draft Release
        run: |
          echo WeblocOpenerCore hash: ${{ needs.build.outputs.WEBLOCOPENERCORE_HASH }}
          echo WeblocOpener hash: ${{ needs.build.outputs.WEBLOCOPENER_HASH }}
          RELEASE_NAME=rc-${GITHUB_REF#refs/heads/}-build.$BUILD_ID
          RELEASE_TAG=${GITHUB_REF#refs/heads/}-build.$BUILD_ID
          gh release create $RELEASE_TAG WeblocOpener.deb WeblocOpenerSetup.exe --title "Build release: $RELEASE_NAME" --notes "Build: $(date +'%Y-%m-%d %H:%M:%S') ($RELEASE_TAG) <br><br> WeblocOpener: ${{ needs.build.outputs.WEBLOCOPENER_HASH }} <br> WeblocOpenerCore: ${{ needs.build.outputs.WEBLOCOPENERCORE_HASH }}" --draft --prerelease
        env:
          GITHUB_TOKEN: ${{ secrets.WEBLOCOPENER_RELEASES }}


  # Optional: Uploads the full dependency graph to GitHub to improve the quality of Dependabot alerts this repository can receive
  dependency-graph:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Update dependency graph
        uses: advanced-security/maven-dependency-submission-action@571e99aab1055c2e71a1e2309b9691de18d6b7d6
